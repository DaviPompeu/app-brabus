unit UnitAssinatura;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs, FMX.Objects,
  FMX.Controls.Presentation, FMX.StdCtrls, FMX.Layouts,

// user para assinatura
  System.Generics.Collections
  ;
type

// criado record para manipular a assinatura
    TAssinatura = Record
      PosicaoCursor: TPointF;
      PosState : Byte;
    End;


  TFrmAssinatura = class(TForm)
    Image4: TImage;
    Label1: TLabel;
    topoUser: TImage;
    lyt_Alinhar_Esquerda: TLayout;
    rect_assinatura: TRectangle;
    Image1: TImage;
    Image3: TImage;
    lyt_Limpar: TLayout;
    Image2: TImage;
    img_assinatura: TImage;
    img_temp: TImage;
    procedure img_tempClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure FormDestroy(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure Image2Click(Sender: TObject);
    procedure Image3Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    Assina : Tlist<TAssinatura>;
    botao : boolean;
    procedure AddPoint(const x, y : single; const state: byte);
  end;

var
  FrmAssinatura: TFrmAssinatura;

implementation

{$R *.fmx}

procedure TFrmAssinatura.AddPoint(const x, y: single; const state: byte);
begin
 //   ...
end;

procedure TFrmAssinatura.FormCreate(Sender: TObject);
begin
  Assina := TList<TAssinatura>.create;
end;

procedure TFrmAssinatura.FormDestroy(Sender: TObject);
begin
  FreeAndNil (Assina);
end;

procedure TFrmAssinatura.FormShow(Sender: TObject);
begin
  Assina.clear;
end;

procedure TFrmAssinatura.Image2Click(Sender: TObject);
begin
  Assina.clear;
end;

procedure TFrmAssinatura.Image3Click(Sender: TObject);
begin
  Assina.Clear;
  Close;
end;

procedure TFrmAssinatura.img_tempClick(Sender: TObject);
begin
  img_temp.Width := FrmAssinatura.Height;
  img_temp.Height := FrmAssinatura.Width;
end;

end.
